#!/usr/bin/env php
<?php

use XlsBenchmarks\XlsBench;
use XlsBenchmarks\DriverCollection;
use XlsBenchmarks\Drivers;
use XlsBenchmarks\PackageCollection;
use League\CLImate\CLImate;

$base_dir = dirname(__DIR__);

require $base_dir.'/vendor/autoload.php';

$path     = $base_dir.'/output/result.xls';
$terminal = new CLImate();
$packages = new PackageCollection();
$packages->addPackageFromComposer($base_dir.'/composer.lock');

//DON'T EDIT BELOW!!

$summary = <<<EOF
<green>XLS Benchmark</green>
    Test writing capabilities from different PHP XLS packages. With out of the box settings when applicable

<yellow>Packages tested:</yellow>

EOF;

foreach ($packages as $name => $data) {
    $summary .= "       - <green>$name</green> (<yellow>v{$data['version']}</yellow>) (<cyan>{$data['homepage']}</cyan>)".PHP_EOL;
}

$options = <<<EOF
<yellow>Options:</yellow>
    <green>--help</green>         Display this help message
    <green>--rows</green>         Numbers of rows to create
    <green>--cells</green>        Numbers of cells per row to create (default: <yellow>3</yellow>)
    <green>--path</green>         Path to the file to read from OR to write to (default: <yellow>$path</yellow>)
    <green>--iteration</green>    Numbers of iteration for each test (default: <yellow>3</yellow>)
    <green>--driver</green>       Driver
EOF;

$args = getopt('', ["rows::", "cells::", "path::", "iteration::", "help", "driver::",]);
if (! $args || isset($args['help'])) {
    $terminal->output($summary.$options);
    die(0);
} elseif (! isset($args['rows'])) {
    $terminal->error("The number of row the write is missing");
    $terminal->output('');
    $terminal->output($summary.$options);
    die(52);
}

if (isset($args['path'])) {
    $path = trim($args['path']);
}

$iteration = 3;
if (isset($args['iteration'])) {
    $iteration = $args['iteration'];
}

$nbcells = 3;
if (isset($args['cells'])) {
    $nbcells = $args['cells'];
}

$drivers = new DriverCollection();
switch ($args['driver']) {
    case 'Spout':
        $drivers->add(new Drivers\Spout());
        break;
    case 'SpreadsheetExcelWriter':
        $drivers->add(new Drivers\SpreadsheetExcelWriter());
        break;
    case 'Phpspreadsheet':
        $drivers->add(new Drivers\Phpspreadsheet());
        break;
}

$benchmark = new XlsBench($drivers, $packages, $terminal);
$benchmark->setPath($path);
$benchmark->setRowCount($args['rows']);
$benchmark->setCellCount($nbcells);
$benchmark->setIterationCount($iteration);
$benchmark();
die(0);
